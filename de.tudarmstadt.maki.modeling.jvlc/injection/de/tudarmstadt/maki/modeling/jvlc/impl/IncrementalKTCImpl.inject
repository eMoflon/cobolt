
partial class IncrementalKTCImpl {



@model runOnNodePreprocessing (KTCNode node) <--

		final long ticMillis = System.currentTimeMillis();
		ECollections.sort(node.getOutgoingEdges(), new Comparator<Edge>() {
			@Override
			public int compare(Edge o1, Edge o2) {
				final KTCLink link1 = (KTCLink) o1;
				final KTCLink link2 = (KTCLink) o2;
				return Double.compare(link1.getDistance(), link2.getDistance());
			}

		});
		final long tocMillis = System.currentTimeMillis();
		final long durationInMillis = tocMillis - ticMillis;
		Monitor.log(getClass(), Level.DEBUG,
				"Sorting during preprocessing of unclassified link identification took %dms", durationInMillis);
-->

}